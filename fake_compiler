#!/usr/bin/python

import optparse
import subprocess
import os
import tempfile
import shutil
import sys
import stat

def main ():
    parser = optparse.OptionParser ()
    parser.add_option ("--output", "-o")
    parser.add_option ("--compiler", "-c")

    (options, args) = parser.parse_args ()
    if options.output is None:
        options.output = os.path.realpath ("fake_compiler.out")

    if options.compiler is None:
        options.compiler = "gcc"

    p = subprocess.Popen (["which", options.compiler],
                          stdout = subprocess.PIPE)
    realCompiler = p.stdout.readline().strip()
    p.wait()

    tmpdir = tempfile.mkdtemp(prefix = os.path.join(os.getcwd(), ""))
    fakeCompiler = os.path.join (tmpdir, options.compiler)
    f = open (fakeCompiler, "w")
    f.write ("""#!/usr/bin/python\n"""
             """import subprocess\n"""
             """import os\n"""
             """import sys\n"""
             """output = open ("%s", "a")\n"""
             """output.write ("%%s\\n" %% ([os.getcwd()] + sys.argv[1:]))\n"""
             """output.close()\n"""
             """subprocess.call(["%s"] + sys.argv[1:])\n"""
             % (options.output, realCompiler))
    f.close()
    os.chmod (fakeCompiler, os.stat(fakeCompiler).st_mode | stat.S_IEXEC)

    newPath = tmpdir + ":" + os.getenv("PATH")
    os.environ["PATH"] = newPath
    os.environ["CXX"] = fakeCompiler

    subprocess.call (args)


if __name__ == "__main__":
    main()
